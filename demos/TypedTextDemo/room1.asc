// room script file

TypedTextDrawing ttdraw;
DynamicSprite *papersprite;
int paper_original_pos;

void ClearTypewriter()
{
  if (papersprite != null)
    papersprite.Delete();
  papersprite = null;
  ttdraw.Clear();
  oPaper.Y = paper_original_pos;
}

void StartTypewriter()
{
  ClearTypewriter();
  SayCustom("Launch the big typewriter!");
  
  papersprite = DynamicSprite.CreateFromExistingSprite(28);
  oPaper.Graphic = papersprite.Graphic;
  
  //Display("paper size = %d x %d", papersprite.Width, papersprite.Height);
  ttdraw.X = 4;
  ttdraw.Y = 4;
  ttdraw.Width = papersprite.Width - 8;
  ttdraw.Height = papersprite.Height - 8;
  ttdraw.Font = eFontFont3;
  ttdraw.BkgColor = Game.GetColorFromRGB(255, 255, 255);
  ttdraw.TextColor = Game.GetColorFromRGB(66, 44, 123);
  ttdraw.TextAlign = eAlignCentre;
  ttdraw.CaretSprite = 29;
  ttdraw.TypeDelayMin = 4;
  ttdraw.TypeDelayMax = 7;
  ttdraw.TypeDelayStyle = eTypedDelay_Mixed;
  ttdraw.CaretFlashOnTime = 9;
  ttdraw.CaretFlashOffTime = 9;
  ttdraw.CaretStyle = eTypedCaret_Explicit;
  
  AudioClip *type_clips[] = new AudioClip[3];
  type_clips[0] = aType;
  type_clips[1] = aType2;
  type_clips[2] = aType3;
  ttdraw.SetRandomTypeSounds(type_clips, 3);
  ttdraw.CaretSound = aCaret;
  
  String big_string = "The TypedTextDrawing prints TypedText on the provided DrawingSurface. Therefore it may draw text on almost anything: room backgrounds, object and character frames, and GUI. ";
  big_string = big_string.Append("Furthermore, you may assign sprite number to CaretSprite property, and it will be used to draw caret position.");
  
  ttdraw.Start(big_string);
}

void UpdateTypewriter()
{
  if (ttdraw.IsActive)
  {
    ttdraw.Tick();
    DrawingSurface *ds = papersprite.GetDrawingSurface();
    ttdraw.Draw(ds);
    ds.Release();
    //oPaper.Y = paper_original_pos - ttdraw.LinesDisplayed * (ttdraw.LineHeight + ttdraw.LineSpacing);
    oPaper.Graphic = papersprite.Graphic;
  }
}

function room_Load()
{
  paper_original_pos = oPaper.Y;
  cGuybrush.ManualScaling = true;
  cGuybrush.Scaling = 200;
  cGuybrush.FaceLocation(cGuybrush.x + 100, cGuybrush.y, eNoBlock);
}

function oTypewriter_AnyClick()
{
  if (ttdraw.IsActive && !ttdraw.IsIdle)
  {
    ttdraw.Skip();
    //oPaper.Y = paper_original_pos - ttdraw.LinesDisplayed * (ttdraw.LineHeight + ttdraw.LineSpacing);
  }
  else
  {
    StartTypewriter();
  }
}

function oPaper_AnyClick()
{
  SayCustom("This paper is in fact a room object, which has a dynamic sprite attached to it. Letters are being typed on the dynamic sprite using TypedTextDrawing class.");
}

function room_RepExec()
{
  UpdateTypewriter();
}
