
String speechlines[];
int speechline_count;
int speechline_index;

String randomlines[];
int randomline_count;

function game_start()
{
  speechline_count = 15;
  speechlines = new String[speechline_count];
  speechlines[0] = "Welcome.";
  speechlines[1] = "Do not mind the graphics...[They are stolen from the internet.";
  speechlines[2] = "You may wonder, though, what's the deal with the speech bubble?[Well...";
  speechlines[3] = "The bubble drawing script was \"borrowed\" from the Phylactere module.";
  speechlines[4] = "That bubble module was made by the French AGSer known as Asraroth.";
  speechlines[5] = "In fact, \"phylactere\" stands for \"speech scroll\" in French.[Or something like that...";
  speechlines[6] = "Here a secret: the bubble is displayed on graphical overlay, but the text is drawn on a separate overlay.";
  speechlines[7] = "This is to test TypewriterOverlay class, which is only textual.";
  speechlines[8] = "The mouse cursor, on the other hand, is taken from the classic MI 9 Verb template by abstauber.";
  speechlines[9] = "The sounds are courtesy of uploaders from freesound.org.";
  speechlines[10] = "Typewriter typing and caret return sounds are by tjandrasounds.";
  speechlines[11] = "Keyboard sounds are by Trollarch2.";
  speechlines[12] = "Beeping sound used when footline ends typing is by pan14.";
  speechlines[13] = "Hmm...";
  speechlines[14] = "What to say when you do not know what to say?";
  speechline_index = 0;
  
  randomline_count = 10;
  randomlines = new String[randomline_count];
  randomlines[0] = "Hello?";
  randomlines[1] = "Ugh. Hi there?";
  randomlines[2] = "Why are you clicking on me?";
  randomlines[3] = "Could you, please, stop?";
  randomlines[4] = "Come on, click on something else.";
  randomlines[5] = "There is no point in clicking me.[Seriously.";
  randomlines[6] = "Did you know you can interrupt my speech by pressing a key or clicking... elsewhere?";
}

#define WAIT_FOR_TICKS_MIN 80
#define WAIT_FOR_TICKS_MAX 240
bool was_typing;
int timer;

void SayClickedLine()
{
  int random_index = -1;
  int tries = 0;
  while (random_index < 0)
  {
    random_index = Random(randomline_count - 1);
    if (randomlines[random_index] == null)
      random_index = -1;
    tries++;
    if (tries == 10)
      random_index = 0;
  }
  
  was_typing = false;
  timer = 0;
  cGuybrush.FaceLocation(cGuybrush.x, cGuybrush.y + 100, eNoBlock);
  cGuybrush.PhylactereTypewriter(randomlines[random_index], eNoBlock, 1);
}

void SayCustom(String line)
{
  was_typing = false;
  timer = 0;
  cGuybrush.FaceLocation(cGuybrush.x + 100, cGuybrush.y, eNoBlock);
  cGuybrush.PhylactereTypewriter(line, eNoBlock, 1);
}

function on_key_press(eKeyCode keycode) 
{
  InterruptPhylactereTypewriter();
}

function on_mouse_click(MouseButton button)
{
  if (GetLocationType(mouse.x, mouse.y) == eLocationNothing) 
    InterruptPhylactereTypewriter();
}

function repeatedly_execute()
{
  if (player.Room != 1)
    return;

  if (IsPhylactereStillTyping())
  {
    was_typing = true;
  }
  else if (was_typing)
  {
    was_typing = false;
    timer = Random(WAIT_FOR_TICKS_MAX - WAIT_FOR_TICKS_MIN) + WAIT_FOR_TICKS_MIN;
  }
  else if (timer > 0)
  {
    timer--;
  }
  else
  {
    cGuybrush.FaceLocation(cGuybrush.x + 100, cGuybrush.y, eNoBlock);
    cGuybrush.PhylactereTypewriter(speechlines[speechline_index], eNoBlock, 1);
    speechline_index++;
    if (speechline_index == speechline_count || speechlines[speechline_index] == null)
      speechline_index = 0;
  }
}
