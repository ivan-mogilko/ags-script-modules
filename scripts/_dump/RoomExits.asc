//===========================================================================
//
// RoomExits::SetCapacity
//
//===========================================================================
void RoomExits::SetCapacity(int max_exits)
{
  this.Capacity = MathUtil.Max(0, max_exits);
  if (this.Capacity > 0)
  {
    this.Name = new String[max_exits];
    this.IsVisible = new bool[max_exits];
    this.IsEnabled = new bool[max_exits];
    this.EObject = new Object[max_exits];
    this.EHotspot = new Hotspot[max_exits];
    this.EChar = new Character[max_exits];
    this.InterMode = new CursorMode[max_exits];
  }
  else
  {
    this.Name = null;
    this.IsVisible = null;
    this.IsEnabled = null;
    this.EObject = null;
    this.EHotspot = null;
    this.EChar = null;
    this.InterMode = null;
  }
}

//===========================================================================
//
// RoomExits::ClearExits
//
//===========================================================================
void RoomExits::ClearExits()
{
  for (int i = 0; i < this.Capacity; i++)
  {
    this.Name[i] = null;
    this.IsVisible[i] = false;
    this.IsEnabled[i] = false;
    this.InterMode[i] = eModePointer;
    this.EObject[i] = null;
    this.EHotspot[i] = null;
    this.EChar[i] = null;
  }
}

//===========================================================================
//
// RoomExits::SetExitAsObject
//
//===========================================================================
bool RoomExits::SetExitAsObject(int exit, Object * o, CursorMode mode, bool visible, bool enabled, String text)
{
  if (exit < 0 || exit >= this.Capacity)
    return false;
  if (o == null)
    return false;
    
  if (!String.IsNullOrEmpty(text))
    this.Name[exit] = text;
  else
    this.Name[exit] = o.Name;
  this.EObject[exit] = o;
  this.EHotspot[exit] = null;
  this.EChar[exit] = null;
  this.InterMode[exit] = mode;
  this.IsVisible[exit] = visible;
  this.IsEnabled[exit] = enabled;
}

//===========================================================================
//
// RoomExits::SetExitAsHotspot
//
//===========================================================================
bool RoomExits::SetExitAsHotspot(int exit, Hotspot * h, CursorMode mode, bool visible, bool enabled, String text)
{
  if (exit < 0 || exit >= this.Capacity)
    return false;
  if (h == null)
    return false;
    
  if (!String.IsNullOrEmpty(text))
    this.Name[exit] = text;
  else
    this.Name[exit] = h.Name;
  this.EObject[exit] = null;
  this.EHotspot[exit] = h;
  this.EChar[exit] = null;
  this.InterMode[exit] = mode;
  this.IsVisible[exit] = visible;
  this.IsEnabled[exit] = enabled;
}

//===========================================================================
//
// RoomExits::SetExitAsCharacter
//
//===========================================================================
bool RoomExits::SetExitAsCharacter(int exit, Character * c, CursorMode mode, bool visible, bool enabled, String text)
{
  if (exit < 0 || exit >= this.Capacity)
    return false;
  if (c == null)
    return false;
    
  if (!String.IsNullOrEmpty(text))
    this.Name[exit] = text;
  else
    this.Name[exit] = c.Name;
  this.EObject[exit] = null;
  this.EHotspot[exit] = null;
  this.EChar[exit] = c;
  this.InterMode[exit] = mode;
  this.IsVisible[exit] = visible;
  this.IsEnabled[exit] = enabled;
}

//===========================================================================
//
// RoomExits::RemoveExit
//
//===========================================================================
bool RoomExits::RemoveExit(int exit)
{
  if (exit < 0 || exit >= this.Capacity)
    return false;
    
  this.Name[exit] = null;
  this.IsVisible[exit] = false;
  this.IsEnabled[exit] = false;
  this.EObject[exit] = null;
  this.EHotspot[exit] = null;
  this.EChar[exit] = null;
  this.InterMode[exit] = eModePointer;
}

//===========================================================================
//
// RoomExits::IsExitVisible
//
//===========================================================================
bool RoomExits::IsExitVisible(int exit)
{
  if (exit < 0 || exit >= this.Capacity)
    return false;
  return this.IsVisible[exit];
}

//===========================================================================
//
// RoomExits::IsExitEnabled
//
//===========================================================================
bool RoomExits::IsExitEnabled(int exit)
{
  if (exit < 0 || exit >= this.Capacity)
    return false;
  return this.IsEnabled[exit];
}

//===========================================================================
//
// RoomExits::OnExit
//
//===========================================================================
bool RoomExits::OnExit(int exit)
{
  if (exit < 0 || exit >= this.Capacity)
    return false;
    
  if (this.EObject[exit] != null)        this.EObject[exit].RunInteraction(this.InterMode[exit]);
  else if (this.EHotspot[exit] != null)  this.EHotspot[exit].RunInteraction(this.InterMode[exit]);
  else if (this.EChar[exit] != null)     this.EChar[exit].RunInteraction(this.InterMode[exit]);
  else
    return false;
  return true;
}
